#!/bin/bash

# Remember to modify two variables below if needed when you use this script for
# porting iotg TC.
DIR_CATS_DEV="$HOME/workspace/vied-viedandr-cats-dev"
DIR_CAMERA_TESTING="$HOME/workspace/vied-viedandr-camera-testing"

#YOCTO_CATS_TESTCASE_HOME="$DIR_CATS_DEV/DUT/Yocto/TestCase/"
YOCTO_CATS_TESTCASE_HOME="$HOME/dut/yocto/"
ANDROID_CATS_TESTCASE_HOME="$HOME/dut/android/"
#ANDROID_CATS_TESTCASE_HOME="$DIR_CATS_DEV/DUT/TestCase/"
GENERATOR_SCRIPT_HOME="$DIR_CAMERA_TESTING/v4l2-tests/data/ipu4_v4l2_test/TestCases/"

EXE_NAME="ipu4_v4l2_test"
TOOL_PATH=`pwd`
dev_prefix=("IMX214" "IMX132" "CSI" "TPG" "ISA" "CSI2")

if [ "$1" == "yocto" ]; then
    CATS_TEST_HOME=${YOCTO_CATS_TESTCASE_HOME}
else
    CATS_TEST_HOME=${ANDROID_CATS_TESTCASE_HOME}
fi

CAMERA_V4L2_PRI=${CATS_TEST_HOME}"Camera_V4L2_PRI/"
CAMERA_V4L2_ISP=${CATS_TEST_HOME}"Camera_V4L2_ISP/"
CAMERA_V4L2_TPG=${CATS_TEST_HOME}"Camera_V4L2_TPG/"

echo "===========================Running the script============================="
get_dev_name(){
    #$1: s_casename
    s_casename=$1
    if echo $s_casename | grep "IMX214" > /dev/null 2>&1;then
        first_h="IMX214"
        lower_h=`echo ${1##*214_} | sed -e 's/_/ /g'`
    elif echo $s_casename | grep "IMX132" > /dev/null 2>&1;then
        first_h="IMX132"
        lower_h=`echo ${1##*132_} | sed -e 's/_/ /g'`
    elif echo $s_casename | grep "TPG" > /dev/null 2>&1;then
        first_h="TPG"
        lower_h=`echo ${1##*TPG_}`
    elif echo $s_casename | grep "ISA" > /dev/null 2>&1;then
        first_h="ISA"
        lower_h=""
    elif echo $s_casename | grep "BE" > /dev/null 2>&1;then
        first_h="CSI2"
        lower_h=`echo ${1##*CSI2_}`
    else
        first_h="CSI-2"
        lower_h=`echo ${1##*CSI-2} | sed -e 's/_/ /g' | tr -d " "`
    fi
    echo $first_h" "$lower_h | sed -e "s/[ ]*$//g"

}

get_case_category(){
    #$1:c_casename
    c_casename=$1

    if echo $c_casename | grep "S_SELECTION" > /dev/null 2>&1; then
        echo "V4L2_SubDev_SSel."
    elif echo $c_casename | grep -E "S_FMT|Raw" > /dev/null 2>&1; then
        echo "V4L2_SubDev_SFmt."
    elif echo $c_casename | grep "IOCTL" > /dev/null 2>&1; then
        echo "MC_Stdioctl_Test."
    else
        echo "V4L2_SubDev."
    fi
}

get_subdev_c_casename(){
    #$1:shell_casename
    #$2:pixel
    s_casename=$1
    pixel=$2
    #if [ ! -z $2 -a -n `echo $2 | grep -o "[0-9]\{4\}x[0-9]\{4\}"`];then
    if [ ! -z $pixel -a -n `echo $pixel | grep -o "[0-9]\{4\}x[0-9]\{4\}"` >/dev/null 2>&1 ]; then
        echo ${s_casename%%_${pixel}*}
    else
        for i in ${dev_prefix[@]}
        do
            if [ $i == "CSI2" ]; then
                if echo ${s_casename}| grep "CSI2" > /dev/null 2>&1; then
                    echo ${s_casename%%_CSI2*}
                fi
            else 
                if echo ${s_casename} | grep -v "CSI2" | grep $i >/dev/null 2>&1; then
                    echo ${s_casename%%_${i}*}
                fi
            fi
        done
    fi
}

generate_cmd(){
    #$1: shell casename for geting DEV_NAME for media ctl -e using "media-ctl -e "Intel IPU4 ${DEV_NAME} capture"
    s_casename=$1
    PIXEL=`echo ${s_casename} | grep -o "[0-9]\{4\}x[0-9]\{4\}"`
    # SUBDEV: without IOCTL
    if [ -z `echo ${s_casename} | grep 'IOCTL'` ];then
        if [ ! -z "$PIXEL" ]; then
            width=`echo $PIXEL | awk -F"x" '{print $1}'`
            height=`echo $PIXEL | awk -F"x" '{print $2}'`
            dev_name_o=$(get_dev_name $s_casename)
            c_casename=$(get_subdev_c_casename $s_casename $PIXEL)
            c_casename_category=$(get_case_category $c_casename)
            echo "dev_name=\$(media-ctl -e \"${dev_name_o}\");$EXE_NAME --gtest_filter=\"${c_casename_category}${c_casename}\" -d="'$dev_name'" -w=${width} -h=${height}"
        else
            dev_name_o=$(get_dev_name $s_casename)
            c_casename=$(get_subdev_c_casename $s_casename)    
            c_casename_category=$(get_case_category $c_casename)
            echo "dev_name=\$(media-ctl -e \"${dev_name_o}\");$EXE_NAME --gtest_filter=\"${c_casename_category}${c_casename}\" -d="'$dev_name'""
        fi
    else  # v4l2: none-subdev, no dev_name, no pixel
        c_casename_category=$(get_case_category "IOCTL")
        echo $EXE_NAME  --gtest_filter=\"${c_casename_category}${s_casename}\"
    fi
}

while read line
do
    # Get the TC corresponding component
    if [ ! -z `echo $line | grep "CI_PRI_"` ]; then
        FILE_DIR=${CAMERA_V4L2_PRI}
    elif [ ! -z `echo $line | grep "CI_ISP_"` ]; then
        FILE_DIR=${CAMERA_V4L2_ISP}
    elif [ ! -z `echo $line | grep "CI_TPG_"` ]; then
        FILE_DIR=${CAMERA_V4L2_TPG}
    else
        if [ ! -z `echo $line | grep "CI_" | grep "_IPU4_"` ]; then
            echo "$0: ERROR - please check carefully if add new component"
            echo $line
            FILE_DIR=""
        fi
    fi
    
    case_name=`echo ${line} | tr -d " "`
    echo "=================$case_name======================"
    cmdline=$(generate_cmd $case_name) 
    echo $cmdline 
    if [ "$1" == "yocto" ]; then
        if [ ! -z "${have_frame}" -a -z "${have_fps}" ]; then
            SCRIPT=yocto_ipu4_script_frame
        else
            SCRIPT=yocto_ipu4_script
        fi
    else
        if [ ! -z "${have_frame}" -a -z "${have_fps}" ]; then
            SCRIPT=andriod_ipu4_script_frame
        else
            SCRIPT=andriod_ipu4_script
        fi
    fi

    if [ $FILE_DIR ]; then
        mkdir -p ${FILE_DIR}${case_name}
        generated_file=${GENERATOR_SCRIPT_HOME}${case_name}/${case_name}
        config_file=${GENERATOR_SCRIPT_HOME}${case_name}/${CONFIG_FILE}
#        if [ -f ${generated_file} ]; then
        cd ${FILE_DIR}${case_name}
        if [ ! -z "${HAVE_CONFIG}" ]; then
            cp ${config_file} ./
        fi
        cp ${TOOL_PATH}/${SCRIPT} ./
        #sed -i '/# Run test case/a\${cmdline}' ${SCRIPT}
        sed -i '/Run test case/a\'"${cmdline#\.\/}"'' ${SCRIPT}
        mv ${SCRIPT} ${case_name}
        #if [ $? -eq 0 ]; then
            #sed -i '/'''${case_name}'''/d' ${TOOL_PATH}"/ipu4_bin_test_list"
        #fi
#        else
        echo "---------------------Generated script file not exist list--------------------" >> ${TOOL_PATH}"/porting.log"
        echo "${case_name}" >> ${TOOL_PATH}"/porting.log"
        echo "---------------------Generated script file not exist list end-----------------" >> ${TOOL_PATH}"/porting.log"
#        fi
    
    fi
done < ./ipu4_bin_test_list

echo "======================Please confirm if all TC is added====================="
cat ${TOOL_PATH}"/ipu4_bin_test_list"
echo "==================================Script done==============================="
